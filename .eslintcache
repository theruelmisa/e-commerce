[{"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\index.js":"1","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\App.js":"2","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\lib\\commerce.js":"3","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\index.js":"4","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Products\\Products.jsx":"5","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Products\\Product\\Product.jsx":"6","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Products\\Product\\styles.js":"7","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Products\\styles.js":"8","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Navbar\\Navbar.jsx":"9","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Navbar\\styles.js":"10","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Cart\\styles.js":"12","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Cart\\CartItem\\styles.js":"14","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"18","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\CheckoutForm\\FormInput.jsx":"19","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":174,"mtime":1611537198778,"results":"21","hashOfConfig":"22"},{"size":3251,"mtime":1614558205852,"results":"23","hashOfConfig":"22"},{"size":127,"mtime":1614223840951,"results":"24","hashOfConfig":"22"},{"size":233,"mtime":1612725130747,"results":"25","hashOfConfig":"22"},{"size":762,"mtime":1612670906712,"results":"26","hashOfConfig":"22"},{"size":1349,"mtime":1612670960572,"results":"27","hashOfConfig":"22"},{"size":436,"mtime":1614558304932,"results":"28","hashOfConfig":"22"},{"size":274,"mtime":1614558738793,"results":"29","hashOfConfig":"22"},{"size":1471,"mtime":1614560615088,"results":"30","hashOfConfig":"22"},{"size":2016,"mtime":1614560524614,"results":"31","hashOfConfig":"22"},{"size":2440,"mtime":1612723885908,"results":"32","hashOfConfig":"22"},{"size":687,"mtime":1612671706382,"results":"33","hashOfConfig":"22"},{"size":1504,"mtime":1612723654418,"results":"34","hashOfConfig":"22"},{"size":401,"mtime":1612673314530,"results":"35","hashOfConfig":"22"},{"size":4369,"mtime":1614224557070,"results":"36","hashOfConfig":"22"},{"size":1372,"mtime":1612724053378,"results":"37","hashOfConfig":"22"},{"size":3203,"mtime":1612843552073,"results":"38","hashOfConfig":"22"},{"size":6145,"mtime":1614224514752,"results":"39","hashOfConfig":"22"},{"size":471,"mtime":1612842607796,"results":"40","hashOfConfig":"22"},{"size":1125,"mtime":1612838957336,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"qbztek",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\index.js",[],["85","86"],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\App.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\lib\\commerce.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\index.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Products\\styles.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Cart\\styles.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["87"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { commerce } from '../../../lib/commerce';\r\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline } from '@material-ui/core';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\nimport useStyles from './styles';\r\n\r\n// NOTE: CssBaseline is a quickfix for narrowly misaligned elements on mobile provided by material ui\r\n\r\nconst steps = ['Shipping Address', 'Payment Details'];\r\n\r\nconst Checkout = ({ cart, order, onCaptureCheckout, error  }) => {\r\n    const [ activeStep, setActiveStep ] = useState(0);\r\n    const [ checkoutToken, setCheckoutToken ] = useState(null);\r\n    const [ shippingData, setShippingData ] = useState({});\r\n    const [ isDone, setIsDone ] = useState(false);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    useEffect( () => {\r\n        \r\n        generateToken();\r\n    }, [cart]);\r\n\r\n    const generateToken = async () => {\r\n        try {\r\n            const token = await commerce.checkout.generateToken( cart.id, { type: 'cart' } );\r\n            setCheckoutToken( token );\r\n        } catch ( error ) {\r\n            // go back to home page if you are in the checkout and you encounter an error\r\n            history.pushState('/');\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    const nextStep = () => setActiveStep( prevActiveStep => prevActiveStep + 1);\r\n    const prevStep = () => setActiveStep( prevActiveStep => prevActiveStep - 1);\r\n\r\n    const next = data => {\r\n        setShippingData( data );\r\n        nextStep();\r\n    }\r\n\r\n    const timeout = () => {\r\n        setTimeout( () => {\r\n            setIsDone( true );\r\n        }, 3000);\r\n    }\r\n\r\n    let Confirmation = () => order.customer ? (\r\n        <>\r\n            <div>\r\n                <Typography variant=\"h5\">\r\n                    Thank you for shopping with us, { order.customer.firstname } { order.customer.lastname }\r\n                </Typography>\r\n                <Divider className={ classes.divider } />\r\n                <Typography variant=\"subtitle2\">Order ref: { order.customer_reference } </Typography>\r\n            </div>\r\n            <br />\r\n            <Button component={ Link } to=\"/\" variant=\"outlined\" type=\"button\">Return to Home Page</Button>\r\n        </>\r\n    ) : isDone ? (\r\n        <>\r\n            <div>\r\n                <Typography variant=\"h5\">\r\n                    Thank you for shopping with us.\r\n                </Typography>\r\n                <Divider className={ classes.divider } />\r\n            </div>\r\n            <br />\r\n            <Button component={ Link } to=\"/\" variant=\"outlined\" type=\"button\">Return to Home Page</Button>\r\n        </>\r\n    ) : (\r\n        <div className={ classes.spinner }>\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n\r\n    if ( error ) {\r\n        <>\r\n            <Typography variant=\"h5\">Error: { error }</Typography>\r\n            <br />\r\n            <Button component={ Link } to=\"/\" variant=\"outlined\" type=\"button\">Return to Home Page</Button>\r\n        </>\r\n    }\r\n\r\n    const Form = () => activeStep === 0\r\n        ? <AddressForm checkoutToken={ checkoutToken } next={ next }/>\r\n        : <PaymentForm \r\n            checkoutToken={ checkoutToken } \r\n            shippingData={ shippingData } \r\n            prevStep={ prevStep } \r\n            nextStep={ nextStep } \r\n            onCaptureCheckout={ onCaptureCheckout }\r\n            timeout={ timeout }\r\n        />\r\n\r\n    return (  \r\n        <>\r\n        <CssBaseline />\r\n            <div className={ classes.toolbar } />\r\n            <main className={ classes.layout }>\r\n                <Paper className={ classes.paper }>\r\n                    <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                    <Stepper activeStep={ activeStep } className={ classes.stepper }>\r\n                        { steps.map( step => (\r\n                            <Step key={ step }>\r\n                                <StepLabel>{ step }</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    { activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form /> }\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Checkout;","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["88","89"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FormInput from './FormInput';\r\nimport { commerce } from '../../lib/commerce';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    const [ shippingCountries, setShippingCountries ] = useState([]);\r\n    const [ shippingCountry, setShippingCountry ] = useState('');\r\n    const [ shippingProvinces, setShippingProvinces ] = useState([]);\r\n    const [ shippingProvince, setShippingProvince ] = useState('');\r\n    const [ shippingOptions, setShippingOptions ] = useState([]);\r\n    const [ shippingOption, setShippingOption ] = useState('');\r\n    const methods = useForm();\r\n\r\n    useEffect( () => {\r\n        fetchShippingCountries( checkoutToken.id );\r\n    }, []);\r\n\r\n    const countries = Object.entries( shippingCountries ).map(([ code, name ]) => ({ id: code, label: name }));\r\n\r\n    const fetchShippingCountries = async ( checkoutTokenId ) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries( checkoutTokenId );\r\n        setShippingCountries( countries );\r\n        setShippingCountry( Object.keys( countries )[0] );\r\n    }\r\n\r\n    useEffect( () => {\r\n        if ( shippingCountry ) {\r\n            fetchSubdivisions( shippingCountry )\r\n        }\r\n    }, [ shippingCountry ]); // Needs to know what shippingCountry will be to cause update\r\n\r\n    const provinces = Object.entries( shippingProvinces ).map(([ code, name ]) => ({ id: code, label: name }));\r\n\r\n    const fetchSubdivisions = async ( countryCode ) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions( countryCode );\r\n\r\n        setShippingProvinces( subdivisions );\r\n        setShippingProvince( Object.keys( subdivisions )[0] );\r\n    };\r\n\r\n    useEffect( () => {\r\n        if ( shippingProvince ) {\r\n            fetchShippingOptions( checkoutToken.id, shippingCountry, shippingProvince );\r\n        }\r\n    }, [ shippingProvince ]);\r\n\r\n    const options = shippingOptions.map( sO => ({ id: sO.id, label: `${ sO.description } - (${ sO.price.formatted_with_symbol })` }));\r\n    const fetchShippingOptions = async ( checkoutTokenId, country, region = null ) => {\r\n        const response = await commerce.checkout.getShippingOptions( checkoutTokenId, { country, region } );\r\n        setShippingOptions( response );\r\n        // Added this to make sure that response does return something before setting shipping option to the first item in array\r\n        response.length && setShippingOption( response[0].id );\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\r\n            <FormProvider { ...methods }>\r\n                <form onSubmit={ methods.handleSubmit( data => next( { ...data, shippingCountry, shippingProvince, shippingOption })) }>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name=\"firstName\" label=\"First Name\" />\r\n                        <FormInput name=\"lastName\" label=\"Last Name\" />\r\n                        <FormInput name=\"address\" label=\"Address\" />\r\n                        <FormInput name=\"email\" label=\"Email\" />\r\n                        <FormInput name=\"city\" label=\"City\" />\r\n                        <FormInput name=\"postalCode\" label=\"Postal Code\" />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={ shippingCountry } fullWidth onChange={ e => setShippingCountry( e.target.value ) }>\r\n                                {\r\n                                    countries.map( country => (\r\n                                        <MenuItem key={ country.id } value={ country.id } >\r\n                                            { country.label }\r\n                                        </MenuItem>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Province</InputLabel>\r\n                            <Select value={ shippingProvince } fullWidth onChange={ e => setShippingProvince( e.target.value ) }>\r\n                                {\r\n                                    provinces.map( province => (\r\n                                        <MenuItem key={ province.id } value={ province.id } >\r\n                                            { province.label }\r\n                                        </MenuItem>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={ shippingOption } fullWidth onChange={ e => setShippingOption( e.target.value ) }>\r\n                                {\r\n                                    options.map( option => (\r\n                                        <MenuItem key={ option.id } value={ option.id } >\r\n                                            { option.label }\r\n                                        </MenuItem>\r\n                                    ))\r\n                                }\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    < br />\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <Button component={ Link } to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AddressForm\r\n","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\CheckoutForm\\FormInput.jsx",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":24,"column":8,"nodeType":"96","endLine":24,"endColumn":14,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":19,"column":8,"nodeType":"96","endLine":19,"endColumn":10,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":48,"column":8,"nodeType":"96","endLine":48,"endColumn":28,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateToken'. Either include it or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["105"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [cart, generateToken]",{"range":"113","text":"114"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"115","text":"116"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingProvince]",{"range":"117","text":"118"},[1014,1020],"[cart, generateToken]",[914,916],"[checkoutToken.id]",[2093,2113],"[checkoutToken.id, shippingCountry, shippingProvince]"]